// Mocks generated by Mockito 5.4.4 from annotations
// in fo_fe/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i18;
import 'dart:typed_data' as _i19;

import 'package:dartz/dartz.dart' as _i4;
import 'package:data_connection_checker_nulls/data_connection_checker_nulls.dart' as _i5;
import 'package:fo_fe/core/db/drift/organizer_drift_exports.dart' as _i3;
import 'package:fo_fe/core/error/failures.dart' as _i13;
import 'package:fo_fe/core/utils/converters/input_converter.dart' as _i20;
import 'package:fo_fe/core/utils/network/network_info.dart' as _i7;
import 'package:fo_fe/features/organizer/items/reminder/domain/entities/reminder_entity.dart'
    as _i17;
import 'package:fo_fe/features/organizer/items/tag/utils/tag_exports.dart' as _i16;
import 'package:fo_fe/features/organizer/items/task/data/datasources/task_local_data_source_drift.dart'
    as _i11;
import 'package:fo_fe/features/organizer/items/task/data/datasources/task_remote_data_source_impl.dart'
    as _i9;
import 'package:fo_fe/features/organizer/items/task/domain/repositories/task_repository.dart'
    as _i6;
import 'package:fo_fe/features/organizer/items/task/utils/task_exports.dart' as _i14;
import 'package:fo_fe/features/organizer/items/user/utils/user_exports.dart' as _i15;
import 'package:fo_fe/features/organizer/utils/organizer_exports.dart' as _i12;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrganizerDriftDB_1 extends _i1.SmartFake implements _i3.OrganizerDriftDB {
  _FakeOrganizerDriftDB_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_3 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_4 extends _i1.SmartFake implements Duration {
  _FakeDuration_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressCheckResult_5 extends _i1.SmartFake implements _i5.AddressCheckResult {
  _FakeAddressCheckResult_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_6 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_7 extends _i1.SmartFake implements _i2.StreamedResponse {
  _FakeStreamedResponse_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskRepository_8 extends _i1.SmartFake implements _i6.TaskRepository {
  _FakeTaskRepository_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  @override
  _i8.Future<bool> get isInternet => (super.noSuchMethod(
        Invocation.getter(#isInternet),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);
}

/// A class which mocks [TaskRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRemoteDataSourceImpl extends _i1.Mock implements _i9.TaskRemoteDataSourceImpl {
  @override
  _i2.Client get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
        returnValueForMissingStub: _FakeClient_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.Client);

  @override
  set httpClient(_i2.Client? _httpClient) => super.noSuchMethod(
        Invocation.setter(
          #httpClient,
          _httpClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  String get serverUrl => (super.noSuchMethod(
        Invocation.getter(#serverUrl),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.getter(#serverUrl),
        ),
        returnValueForMissingStub: _i10.dummyValue<String>(
          this,
          Invocation.getter(#serverUrl),
        ),
      ) as String);
}

/// A class which mocks [TaskLocalDataSourceDrift].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskLocalDataSourceDrift extends _i1.Mock implements _i11.TaskLocalDataSourceDrift {
  @override
  _i3.OrganizerDriftDB get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeOrganizerDriftDB_1(
          this,
          Invocation.getter(#db),
        ),
        returnValueForMissingStub: _FakeOrganizerDriftDB_1(
          this,
          Invocation.getter(#db),
        ),
      ) as _i3.OrganizerDriftDB);

  @override
  _i8.Future<int> addTask(_i3.TaskTableDriftCompanion? taskCompanion) => (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [taskCompanion],
        ),
        returnValue: _i8.Future<int>.value(0),
        returnValueForMissingStub: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<bool> updateTask(_i3.TaskTableDriftCompanion? taskCompanion) => (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [taskCompanion],
        ),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<int> deleteTask(int? taskId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [taskId],
        ),
        returnValue: _i8.Future<int>.value(0),
        returnValueForMissingStub: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<_i3.TaskTableDriftG?> getTaskById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTaskById,
          [id],
        ),
        returnValue: _i8.Future<_i3.TaskTableDriftG?>.value(),
        returnValueForMissingStub: _i8.Future<_i3.TaskTableDriftG?>.value(),
      ) as _i8.Future<_i3.TaskTableDriftG?>);

  @override
  _i8.Future<List<_i3.TaskTableDriftG>?> getTaskItemsAll() => (super.noSuchMethod(
        Invocation.method(
          #getTaskItemsAll,
          [],
        ),
        returnValue: _i8.Future<List<_i3.TaskTableDriftG>?>.value(),
        returnValueForMissingStub: _i8.Future<List<_i3.TaskTableDriftG>?>.value(),
      ) as _i8.Future<List<_i3.TaskTableDriftG>?>);

  @override
  _i8.Future<List<_i3.TaskTableDriftG?>?> getTaskItemsByIdSet(_i12.IdSet? idSet) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTaskItemsByIdSet,
          [idSet],
        ),
        returnValue: _i8.Future<List<_i3.TaskTableDriftG?>?>.value(),
        returnValueForMissingStub: _i8.Future<List<_i3.TaskTableDriftG?>?>.value(),
      ) as _i8.Future<List<_i3.TaskTableDriftG?>?>);

  @override
  _i8.Future<List<_i3.UserTableDriftG>?> getUserItemsByTaskId(int? taskId) => (super.noSuchMethod(
        Invocation.method(
          #getUserItemsByTaskId,
          [taskId],
        ),
        returnValue: _i8.Future<List<_i3.UserTableDriftG>?>.value(),
        returnValueForMissingStub: _i8.Future<List<_i3.UserTableDriftG>?>.value(),
      ) as _i8.Future<List<_i3.UserTableDriftG>?>);

  @override
  _i8.Future<_i3.UserTableDriftG?> getCreatorById(int? creatorId) => (super.noSuchMethod(
        Invocation.method(
          #getCreatorById,
          [creatorId],
        ),
        returnValue: _i8.Future<_i3.UserTableDriftG?>.value(),
        returnValueForMissingStub: _i8.Future<_i3.UserTableDriftG?>.value(),
      ) as _i8.Future<_i3.UserTableDriftG?>);

  @override
  _i8.Future<void> addUserItemsToTask(
    int? taskId,
    List<int>? userItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserItemsToTask,
          [
            taskId,
            userItems,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteUserItemsFromTask(
    int? taskId,
    List<int>? userItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUserItemsFromTask,
          [
            taskId,
            userItems,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i3.ReminderTableDriftG>?> getReminderItemsByTaskId(int? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReminderItemsByTaskId,
          [taskId],
        ),
        returnValue: _i8.Future<List<_i3.ReminderTableDriftG>?>.value(),
        returnValueForMissingStub: _i8.Future<List<_i3.ReminderTableDriftG>?>.value(),
      ) as _i8.Future<List<_i3.ReminderTableDriftG>?>);

  @override
  _i8.Future<void> addReminderItemsToTask(
    int? taskId,
    List<int>? reminderItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReminderItemsToTask,
          [
            taskId,
            reminderItems,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteReminderItemsFromTask(
    int? taskId,
    List<int>? reminderItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReminderItemsFromTask,
          [
            taskId,
            reminderItems,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i3.TagTableDriftG>?> getTagItemsByTaskId(int? taskId) => (super.noSuchMethod(
        Invocation.method(
          #getTagItemsByTaskId,
          [taskId],
        ),
        returnValue: _i8.Future<List<_i3.TagTableDriftG>?>.value(),
        returnValueForMissingStub: _i8.Future<List<_i3.TagTableDriftG>?>.value(),
      ) as _i8.Future<List<_i3.TagTableDriftG>?>);

  @override
  _i8.Future<void> addTagItemsToTask(
    int? taskId,
    List<int>? tagItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTagItemsToTask,
          [
            taskId,
            tagItems,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteTagItemsFromTask(
    int? taskId,
    List<int>? tags,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTagItemsFromTask,
          [
            taskId,
            tags,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [TaskRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRepository extends _i1.Mock implements _i6.TaskRepository {
  @override
  _i8.Future<_i4.Either<_i13.Failure, int>> addTask(_i14.TaskEntity? task) => (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [task],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, int>>.value(_FakeEither_2<_i13.Failure, int>(
          this,
          Invocation.method(
            #addTask,
            [task],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, int>>.value(_FakeEither_2<_i13.Failure, int>(
          this,
          Invocation.method(
            #addTask,
            [task],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, int>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, bool>> updateTask(_i14.TaskEntity? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [task],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, bool>>.value(_FakeEither_2<_i13.Failure, bool>(
          this,
          Invocation.method(
            #updateTask,
            [task],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, bool>>.value(_FakeEither_2<_i13.Failure, bool>(
          this,
          Invocation.method(
            #updateTask,
            [task],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, bool>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, int>> deleteTask(int? taskId) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [taskId],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, int>>.value(_FakeEither_2<_i13.Failure, int>(
          this,
          Invocation.method(
            #deleteTask,
            [taskId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, int>>.value(_FakeEither_2<_i13.Failure, int>(
          this,
          Invocation.method(
            #deleteTask,
            [taskId],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, int>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>> getTaskById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getTaskById,
          [id],
        ),
        returnValue: _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>>.value(
            _FakeEither_2<_i13.Failure, _i14.TaskEntity>(
          this,
          Invocation.method(
            #getTaskById,
            [id],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>>.value(
            _FakeEither_2<_i13.Failure, _i14.TaskEntity>(
          this,
          Invocation.method(
            #getTaskById,
            [id],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntityLazyLoaded>> getTaskByIdLazyLoaded(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTaskByIdLazyLoaded,
          [id],
        ),
        returnValue: _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntityLazyLoaded>>.value(
            _FakeEither_2<_i13.Failure, _i14.TaskEntityLazyLoaded>(
          this,
          Invocation.method(
            #getTaskByIdLazyLoaded,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntityLazyLoaded>>.value(
                _FakeEither_2<_i13.Failure, _i14.TaskEntityLazyLoaded>(
          this,
          Invocation.method(
            #getTaskByIdLazyLoaded,
            [id],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntityLazyLoaded>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>> getTaskItemsAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTaskItemsAll,
          [],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>(
          this,
          Invocation.method(
            #getTaskItemsAll,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>(
          this,
          Invocation.method(
            #getTaskItemsAll,
            [],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>> getTaskItemsByIdSet(
          _i12.IdSet? idSet) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTaskItemsByIdSet,
          [idSet],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>(
          this,
          Invocation.method(
            #getTaskItemsByIdSet,
            [idSet],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>(
          this,
          Invocation.method(
            #getTaskItemsByIdSet,
            [idSet],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i14.TaskEntity>>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>> getUserItemsByTaskId(
          int? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserItemsByTaskId,
          [taskId],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>(
          this,
          Invocation.method(
            #getUserItemsByTaskId,
            [taskId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>(
          this,
          Invocation.method(
            #getUserItemsByTaskId,
            [taskId],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i15.UserEntity>> getCreatorTaskById(int? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreatorTaskById,
          [taskId],
        ),
        returnValue: _i8.Future<_i4.Either<_i13.Failure, _i15.UserEntity>>.value(
            _FakeEither_2<_i13.Failure, _i15.UserEntity>(
          this,
          Invocation.method(
            #getCreatorTaskById,
            [taskId],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i4.Either<_i13.Failure, _i15.UserEntity>>.value(
            _FakeEither_2<_i13.Failure, _i15.UserEntity>(
          this,
          Invocation.method(
            #getCreatorTaskById,
            [taskId],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i15.UserEntity>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>> updateUserItemOfTask(
    int? taskId,
    List<int>? userItems,
    List<int>? updatedUserItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserItemOfTask,
          [
            taskId,
            userItems,
            updatedUserItems,
          ],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>(
          this,
          Invocation.method(
            #updateUserItemOfTask,
            [
              taskId,
              userItems,
              updatedUserItems,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>(
          this,
          Invocation.method(
            #updateUserItemOfTask,
            [
              taskId,
              userItems,
              updatedUserItems,
            ],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i15.UserEntity>>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>> getTagItemsByTaskId(
          int? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTagItemsByTaskId,
          [taskId],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>(
          this,
          Invocation.method(
            #getTagItemsByTaskId,
            [taskId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>(
          this,
          Invocation.method(
            #getTagItemsByTaskId,
            [taskId],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>>);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>> updateTagItemOfTask(
    int? taskId,
    List<int>? tagItems,
    List<int>? updatedTagItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTagItemOfTask,
          [
            taskId,
            tagItems,
            updatedTagItems,
          ],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>(
          this,
          Invocation.method(
            #updateTagItemOfTask,
            [
              taskId,
              tagItems,
              updatedTagItems,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>(
          this,
          Invocation.method(
            #updateTagItemOfTask,
            [
              taskId,
              tagItems,
              updatedTagItems,
            ],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i16.TagEntity>>>);

  @override
  _i8.Future<
      _i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>> getRemindersByTaskId(
          int? taskId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRemindersByTaskId,
          [taskId],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>(
          this,
          Invocation.method(
            #getRemindersByTaskId,
            [taskId],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>(
          this,
          Invocation.method(
            #getRemindersByTaskId,
            [taskId],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>>);

  @override
  _i8.Future<
      _i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>> updateReminderItemOfTask(
    int? taskId,
    List<int>? reminderItems,
    List<int>? updatedReminderItems,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReminderItemOfTask,
          [
            taskId,
            reminderItems,
            updatedReminderItems,
          ],
        ),
        returnValue:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>(
          this,
          Invocation.method(
            #updateReminderItemOfTask,
            [
              taskId,
              reminderItems,
              updatedReminderItems,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>>.value(
                _FakeEither_2<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>(
          this,
          Invocation.method(
            #updateReminderItemOfTask,
            [
              taskId,
              reminderItems,
              updatedReminderItems,
            ],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i12.OrganizerItems<_i17.ReminderEntity>>>);
}

/// A class which mocks [OrganizerItemEntity].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrganizerItemEntity extends _i1.Mock implements _i12.OrganizerItemEntity {
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  DateTime get createdDate => (super.noSuchMethod(
        Invocation.getter(#createdDate),
        returnValue: _FakeDateTime_3(
          this,
          Invocation.getter(#createdDate),
        ),
        returnValueForMissingStub: _FakeDateTime_3(
          this,
          Invocation.getter(#createdDate),
        ),
      ) as DateTime);

  @override
  int get creatorId => (super.noSuchMethod(
        Invocation.getter(#creatorId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  int get remoteId => (super.noSuchMethod(
        Invocation.getter(#remoteId),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> jsonToCheckForUpdates() => (super.noSuchMethod(
        Invocation.method(
          #jsonToCheckForUpdates,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [DataConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataConnectionChecker extends _i1.Mock implements _i5.DataConnectionChecker {
  @override
  List<_i5.AddressCheckOptions> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i5.AddressCheckOptions>[],
        returnValueForMissingStub: <_i5.AddressCheckOptions>[],
      ) as List<_i5.AddressCheckOptions>);

  @override
  set addresses(List<_i5.AddressCheckOptions>? _addresses) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          _addresses,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_4(
          this,
          Invocation.getter(#checkInterval),
        ),
        returnValueForMissingStub: _FakeDuration_4(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);

  @override
  set checkInterval(Duration? _checkInterval) => super.noSuchMethod(
        Invocation.setter(
          #checkInterval,
          _checkInterval,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i5.AddressCheckResult> get lastTryResults => (super.noSuchMethod(
        Invocation.getter(#lastTryResults),
        returnValue: <_i5.AddressCheckResult>[],
        returnValueForMissingStub: <_i5.AddressCheckResult>[],
      ) as List<_i5.AddressCheckResult>);

  @override
  _i8.Future<bool> get hasConnection => (super.noSuchMethod(
        Invocation.getter(#hasConnection),
        returnValue: _i8.Future<bool>.value(false),
        returnValueForMissingStub: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i5.DataConnectionStatus> get connectionStatus => (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue:
            _i8.Future<_i5.DataConnectionStatus>.value(_i5.DataConnectionStatus.disconnected),
        returnValueForMissingStub:
            _i8.Future<_i5.DataConnectionStatus>.value(_i5.DataConnectionStatus.disconnected),
      ) as _i8.Future<_i5.DataConnectionStatus>);

  @override
  _i8.Stream<_i5.DataConnectionStatus> get onStatusChange => (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i8.Stream<_i5.DataConnectionStatus>.empty(),
        returnValueForMissingStub: _i8.Stream<_i5.DataConnectionStatus>.empty(),
      ) as _i8.Stream<_i5.DataConnectionStatus>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isActivelyChecking => (super.noSuchMethod(
        Invocation.getter(#isActivelyChecking),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i8.Future<_i5.AddressCheckResult> isHostReachable(_i5.AddressCheckOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHostReachable,
          [options],
        ),
        returnValue: _i8.Future<_i5.AddressCheckResult>.value(_FakeAddressCheckResult_5(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
        returnValueForMissingStub:
            _i8.Future<_i5.AddressCheckResult>.value(_FakeAddressCheckResult_5(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
      ) as _i8.Future<_i5.AddressCheckResult>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  @override
  _i8.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i2.Response>);

  @override
  _i8.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<_i2.Response>);

  @override
  _i8.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i2.Response>);

  @override
  _i8.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i2.Response>);

  @override
  _i8.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i2.Response>);

  @override
  _i8.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i18.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.Response>.value(_FakeResponse_6(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i8.Future<_i2.Response>);

  @override
  _i8.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<_i19.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i8.Future<_i19.Uint8List>.value(_i19.Uint8List(0)),
        returnValueForMissingStub: _i8.Future<_i19.Uint8List>.value(_i19.Uint8List(0)),
      ) as _i8.Future<_i19.Uint8List>);

  @override
  _i8.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) => (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue: _i8.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_7(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_7(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i8.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [InputConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputConverter extends _i1.Mock implements _i20.InputConverter {
  @override
  _i4.Either<_i13.Failure, int> stringToUnasingInteger(String? input) => (super.noSuchMethod(
        Invocation.method(
          #stringToUnasingInteger,
          [input],
        ),
        returnValue: _FakeEither_2<_i13.Failure, int>(
          this,
          Invocation.method(
            #stringToUnasingInteger,
            [input],
          ),
        ),
        returnValueForMissingStub: _FakeEither_2<_i13.Failure, int>(
          this,
          Invocation.method(
            #stringToUnasingInteger,
            [input],
          ),
        ),
      ) as _i4.Either<_i13.Failure, int>);
}

/// A class which mocks [GetTaskByIdUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTaskByIdUseCase extends _i1.Mock implements _i14.GetTaskByIdUseCase {
  @override
  _i6.TaskRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTaskRepository_8(
          this,
          Invocation.getter(#repository),
        ),
        returnValueForMissingStub: _FakeTaskRepository_8(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i6.TaskRepository);

  @override
  _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>> call(_i14.TaskParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>>.value(
            _FakeEither_2<_i13.Failure, _i14.TaskEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
        returnValueForMissingStub: _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>>.value(
            _FakeEither_2<_i13.Failure, _i14.TaskEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i8.Future<_i4.Either<_i13.Failure, _i14.TaskEntity>>);
}
